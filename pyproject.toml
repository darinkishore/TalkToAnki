[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "TalkToAnki"
version = "1.0.0"
description = "A professional MCP (Model Context Protocol) server for seamless Anki integration with AI assistants"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "TalkToAnki Contributors" }]
maintainers = [{ name = "TalkToAnki Team" }]
keywords = ["anki", "mcp", "ai", "spaced-repetition", "learning", "flashcards"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Education",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
  "mcp>=1.0.0",
  "fastmcp>=0.1.0",
  "httpx>=0.25.0",
  "pydantic>=2.0.0",
  "asyncio-tools>=0.1.2",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "black>=23.0.0",
  "isort>=5.12.0",
  "flake8>=6.0.0",
  "mypy>=1.0.0",
]
test = ["pytest>=7.0.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0"]

[project.urls]
Homepage = "https://github.com/your-username/TalkToAnki"
Repository = "https://github.com/your-username/TalkToAnki"
Issues = "https://github.com/your-username/TalkToAnki/issues"
Documentation = "https://github.com/your-username/TalkToAnki#readme"

[project.scripts]
talktoanki = "talktoanki_server:main"

[tool.setuptools]
packages = ["talktoanki"]

[tool.setuptools.package-dir]
talktoanki = "."

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --tb=short"
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::PendingDeprecationWarning",
]
